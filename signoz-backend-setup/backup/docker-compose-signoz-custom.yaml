version: '3'
services:
  zookeeper-1:
    image: bitnami/zookeeper:3.7.1
    container_name: signoz-zookeeper-1
    hostname: zookeeper-1
    user: root
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - ${SIGNOZ_DATA_PATH}/zookeeper-1:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      # - ZOO_SERVERS=0.0.0.0:2888:3888,zookeeper-2:2888:3888,zookeeper-3:2888:3888
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
    networks:
      - signoz-network

  # zookeeper-2:
  #   image: bitnami/zookeeper:3.7.0
  #   container_name: signoz-zookeeper-2
  #   hostname: zookeeper-2
  #   user: root
  #   ports:
  #     - "2182:2181"
  #     - "2889:2888"
  #     - "3889:3888"
  #   volumes:
  #     - ./data/zookeeper-2:/bitnami/zookeeper
  #   environment:
  #     - ZOO_SERVER_ID=2
  #     - ZOO_SERVERS=zookeeper-1:2888:3888,0.0.0.0:2888:3888,zookeeper-3:2888:3888
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #     - ZOO_AUTOPURGE_INTERVAL=1

  # zookeeper-3:
  #   image: bitnami/zookeeper:3.7.0
  #   container_name: signoz-zookeeper-3
  #   hostname: zookeeper-3
  #   user: root
  #   ports:
  #     - "2183:2181"
  #     - "2890:2888"
  #     - "3890:3888"
  #   volumes:
  #     - ./data/zookeeper-3:/bitnami/zookeeper
  #   environment:
  #     - ZOO_SERVER_ID=3
  #     - ZOO_SERVERS=zookeeper-1:2888:3888,zookeeper-2:2888:3888,0.0.0.0:2888:3888
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #     - ZOO_AUTOPURGE_INTERVAL=1

  clickhouse:
    # <<: *clickhouse-defaults
    image: clickhouse/clickhouse-server:24.1.2-alpine
    tty: true
    depends_on:
      - zookeeper-1
      # - zookeeper-2
      # - zookeeper-3
    logging:
      options:
        max-size: 50m
        max-file: "3"
    healthcheck:
      # "clickhouse", "client", "-u ${CLICKHOUSE_USER}", "--password ${CLICKHOUSE_PASSWORD}", "-q 'SELECT 1'"
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "0.0.0.0:8123/ping"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    container_name: signoz-clickhouse
    hostname: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
      - "9181:9181"
    volumes:
      - ./clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse-users.xml:/etc/clickhouse-server/users.xml
      - ./custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./clickhouse-cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      # - ./clickhouse-storage.xml:/etc/clickhouse-server/config.d/storage.xml
      - ${SIGNOZ_DATA_PATH}/clickhouse/:/var/lib/clickhouse/
      - ./user_scripts:/var/lib/clickhouse/user_scripts/
    networks:
      - signoz-network

  # clickhouse-2:
  #   <<: *clickhouse-defaults
  #   container_name: signoz-clickhouse-2
  #   hostname: clickhouse-2
  #   ports:
  #     - "9001:9000"
  #     - "8124:8123"
  #     - "9182:9181"
  #   volumes:
  #     - ./clickhouse-config.xml:/etc/clickhouse-server/config.xml
  #     - ./clickhouse-users.xml:/etc/clickhouse-server/users.xml
  #     - ./custom-function.xml:/etc/clickhouse-server/custom-function.xml
  #     - ./clickhouse-cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
  #     # - ./clickhouse-storage.xml:/etc/clickhouse-server/config.d/storage.xml
  #     - ./data/clickhouse-2/:/var/lib/clickhouse/
  #     - ./user_scripts:/var/lib/clickhouse/user_scripts/

  # clickhouse-3:
  #   <<: *clickhouse-defaults
  #   container_name: signoz-clickhouse-3
  #   hostname: clickhouse-3
  #   ports:
  #     - "9002:9000"
  #     - "8125:8123"
  #     - "9183:9181"
  #   volumes:
  #     - ./clickhouse-config.xml:/etc/clickhouse-server/config.xml
  #     - ./clickhouse-users.xml:/etc/clickhouse-server/users.xml
  #     - ./custom-function.xml:/etc/clickhouse-server/custom-function.xml
  #     - ./clickhouse-cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
  #     # - ./clickhouse-storage.xml:/etc/clickhouse-server/config.d/storage.xml
  #     - ./data/clickhouse-3/:/var/lib/clickhouse/
  #     - ./user_scripts:/var/lib/clickhouse/user_scripts/

  alertmanager:
    image: signoz/alertmanager:${ALERTMANAGER_TAG:-0.23.7}
    container_name: signoz-alertmanager
    volumes:
      - ${SIGNOZ_DATA_PATH}/alertmanager:/data
    depends_on:
      query-service:
        condition: service_healthy
    restart: on-failure
    command:
      - --queryService.url=http://query-service:8085
      - --storage.path=/data
    networks:
      - signoz-network

  query-service:
    image: signoz/query-service:${DOCKER_TAG:-0.55.0}
    container_name: signoz-query-service
    command:
      [
        "-config=/root/config/prometheus.yml",
        "--use-logs-new-schema=true"
      ]
    # ports:
    #   - "6060:6060"     # pprof port
    #   - "8080:8080"     # query-service port
    ports:
      - "4320:4320"
    volumes:
      - ./prometheus.yml:/root/config/prometheus.yml
      - ../dashboards:/root/config/dashboards
      - ${SIGNOZ_DATA_PATH}/signoz/:/var/lib/signoz/
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - ALERTMANAGER_API_PREFIX=http://alertmanager:9093/api/
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
      - DASHBOARDS_PATH=/root/config/dashboards
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--spider",
          "-q",
          "localhost:8080/api/v1/health"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - signoz-network
    depends_on:
      clickhouse:
        condition: service_healthy
      otel-collector-migrator-sync:
        condition: service_completed_successfully

  frontend:
    image: signoz/frontend:${DOCKER_TAG:-0.55.0}
    container_name: signoz-frontend
    restart: on-failure
    depends_on:
      - alertmanager
      - query-service
    ports:
      - "3301:3301"
    volumes:
      - ./nginx-config.conf:/etc/nginx/conf.d/default.conf
    networks:
      - signoz-network

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    # user: "root"
    container_name: kafka-rest
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      # KAFKA_REST_PORT: 8082
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka-1:29092,kafka-2:29093,kafka-3:29094"
      KAFKA_REST_ZOOKEEPER: "zookeeper-1:2181"
      # KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"  # If you have a Schema Registry service
    ports:
      - "8082:8082"  # Expose Kafka REST port
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kafka-rest:8082"]
      interval: 30s
      timeout: 10s
      retries: 5
    init: true
    networks:
      - signoz-network

  zookeeper-kafka-1:
    image: confluentinc/cp-zookeeper:latest
    # user: "root"
    hostname: zookeeper-kafka-1
    container_name: zookeeper-kafka-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    volumes:
      - ${SIGNOZ_DATA_PATH}/zookeeper_kafka/:/var/lib/zookeeper
    networks:
      - signoz-network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    # user: "root"
    hostname: kafka-1
    container_name: kafka-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-kafka-1:2181

      KAFKA_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-1:29092,LISTENER_EXTERNAL://kafka-1:9092,LISTENER_OUTSIDE_HOST://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-1:29092,LISTENER_EXTERNAL://localhost:9092,LISTENER_OUTSIDE_HOST://192.168.1.45:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT,LISTENER_OUTSIDE_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL_DOCKER

      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 50
      KAFKA_LOG_RETENTION_HOURS: 168 # Adjust as needed
      KAFKA_MESSAGE_MAX_BYTES: 10485760 # Allow larger messages if needed
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Log directory
      KAFKA_DATA_DIR: /var/lib/kafka/data  # Data directory
    ports:
      - "9092:9092"
      - '29094:29094'
    volumes:
      - kafka1-data:/var/lib/kafka/data
    # init: true
    # command: ["/bin/bash", "-c", "chown -R 1000:1000 /var/lib/kafka/data && exec /etc/confluent/docker/run"]
    networks:
      - signoz-network

  kafka-2:
    image: confluentinc/cp-kafka:latest
    # user: "root"
    hostname: kafka-2
    container_name: kafka-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-kafka-1:2181

      KAFKA_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-2:29093,LISTENER_EXTERNAL://kafka-2:9093,LISTENER_OUTSIDE_HOST://0.0.0.0:29095
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-2:29093,LISTENER_EXTERNAL://localhost:9093,LISTENER_OUTSIDE_HOST://192.168.1.45:29095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT,LISTENER_OUTSIDE_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL_DOCKER

      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 50
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Log directory
      KAFKA_DATA_DIR: /var/lib/kafka/data  # Data directory
    ports:
      - "9093:9093"
      - '29095:29095'
    volumes:
      - kafka2-data:/var/lib/kafka/data
    # init: true
    # command: ["/bin/bash", "-c", "chown -R 1000:1000 /var/lib/kafka/data && exec /etc/confluent/docker/run"]
    networks:
      - signoz-network

  kafka-3:
    image: confluentinc/cp-kafka:latest
    # user: "root"
    hostname: kafka-3
    container_name: kafka-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-kafka-1:2181

      KAFKA_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-3:29094,LISTENER_EXTERNAL://kafka-3:9094,LISTENER_OUTSIDE_HOST://0.0.0.0:29096
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL_DOCKER://kafka-3:29094,LISTENER_EXTERNAL://localhost:9094,LISTENER_OUTSIDE_HOST://192.168.1.45:29096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT,LISTENER_OUTSIDE_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL_DOCKER

      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 50
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Log directory
      KAFKA_DATA_DIR: /var/lib/kafka/data  # Data directory
    ports:
      - "9094:9094"
      - '29096:29096'
    volumes:
      - kafka3-data:/var/lib/kafka/data
    # init: true
    # command: ["/bin/bash", "-c", "chown -R 1000:1000 /var/lib/kafka/data && exec /etc/confluent/docker/run"]
    networks:
      - signoz-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    # user: "root"
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-1:29092,kafka-2:29093,kafka-3:29094"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper-kafka-1:2181"
      DYNAMIC_CONFIG_ENABLED: 'true'
    ports:
      - "9999:8080"  # Expose the Kafka UI port
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - signoz-network

  otel-collector-migrator-sync:
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-0.102.10}
    container_name: otel-migrator-sync
    command:
      - "--dsn=tcp://clickhouse:9000"

    # command:
    #   - "sync"
    #   - "--dsn=tcp://clickhouse:9000"
    #   - "--up="
    depends_on:
      clickhouse:
        condition: service_healthy
      # clickhouse-2:
      #   condition: service_healthy
      # clickhouse-3:
      #   condition: service_healthy
    networks:
      - signoz-network

  otel-collector:
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-0.102.10}
    container_name: backend-signoz-otel-collector
    command:
      [
        "--config=/etc/otel-collector-config.yaml",
        "--manager-config=/etc/manager-config.yaml",
        "--copy-path=/var/tmp/collector-config.yaml",
        "--feature-gates=-pkg.translator.prometheus.NormalizeName"
      ]
    user: root # required for reading docker container logs
    volumes:
      - ./otel-collector-config-signoz.yaml:/etc/otel-collector-config.yaml
      - ./otel-collector-opamp-config.yaml:/etc/manager-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /:/hostfs:ro
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=${HOST_NAME},os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
      - DOCKER_MULTI_NODE_CLUSTER=false
      
      - HOST_NAME=${HOST_NAME}
      - SIGNOZ_HOST_IP=${SIGNOZ_HOST_IP}
      - CLICKHOUSE_DB_HOST=${CLICKHOUSE_DB_HOST}
      - CLICKHOUSE_DB_PORT=${CLICKHOUSE_DB_PORT}
    # ports:
    #   # - "1777:1777"     # pprof extension
    #   - "4317:4317" # OTLP gRPC receiver
    #   - "4318:4318" # OTLP HTTP receiver
    #   # - "8888:8888"     # OtelCollector internal metrics
    #   # - "8889:8889"     # signoz spanmetrics exposed by the agent
    #   # - "9411:9411"     # Zipkin port
    #   # - "13133:13133"   # health check extension
    #   # - "14250:14250"   # Jaeger gRPC
    #   # - "14268:14268"   # Jaeger thrift HTTP
    #   # - "55678:55678"   # OpenCensus receiver
    #   # - "55679:55679"   # zPages extension
    # restart: on-failure
    restart: always
    depends_on:
      clickhouse:
        condition: service_healthy
      otel-collector-migrator-sync:
        condition: service_completed_successfully
      query-service:
        condition: service_healthy
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
      - signoz-network


  # otel-collector:
  #   image: ${OTELCOL_IMG}
  #   container_name: signoz-otel-collector
  #   # user: "otel"
  #   # restart: always
  #   command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   # ports:
  #   #   # - "1888:1888"   # pprof extension
  #   #   # - "8888:8888"   # Prometheus metrics exposed by the collector
  #   #   # - "8889:8889"   # Prometheus exporter metrics
  #   #   # - "13133:13133" # health_check extension
  #   #   # - "55679:55679" # zpages extension
  #   #   - "4317:4317"   # OTLP gRPC receiver
  #   #   - "4318:4318"   # OTLP HTTP receiver
  #   environment:
  #     - OTEL_RESOURCE_ATTRIBUTES=host.name=${HOST_NAME},os.type=linux
  #     - LOW_CARDINAL_EXCEPTION_GROUPING=false
  #     - HOST_NAME=${HOST_NAME}
  #     - SIGNOZ_HOST_IP=${SIGNOZ_HOST_IP}
  #     - CLICKHOUSE_DB_HOST=${CLICKHOUSE_DB_HOST}
  #     - CLICKHOUSE_DB_PORT=${CLICKHOUSE_DB_PORT}
  #   restart: on-failure
  #   depends_on:
  #     clickhouse:
  #       condition: service_healthy
  #     otel-collector-migrator-sync:
  #       condition: service_completed_successfully
  #     query-service:
  #       condition: service_healthy

  #     kafka-1:
  #       condition: service_started
  #     kafka-2:
  #       condition: service_started
  #     kafka-3:
  #       condition: service_started

  logspout:
    image: "gliderlabs/logspout:v3.2.14"
    container_name: backend-signoz-logspout
    volumes:
      - /etc/hostname:/etc/host_hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: syslog+tcp://otel-collector:2255
    depends_on:
      - otel-collector
    restart: on-failure
    networks:
      - signoz-network

networks:
  signoz-network:
    driver: bridge

volumes:
  kafka1-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SIGNOZ_DATA_PATH}/kafka1-data
  kafka2-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SIGNOZ_DATA_PATH}/kafka2-data
  kafka3-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SIGNOZ_DATA_PATH}/kafka3-data
